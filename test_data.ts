import type {
  HashHexString,
  HslString,
  HslaString,
  RgbObject,
  RgbString,
  RgbaString,
} from './src/types.js';

export const colors = {
  white: {
    hex: '#ffffff',
    hexAlpha: '#ffffffff',
    hexShort: '#fff',
    rgb: 'rgb(255, 255, 255)',
    rgbNoSpace: 'rgb(255,255,255)',
    rgbModern: 'rgb(255 255 255)',
    rgba: 'rgba(255, 255, 255, 1)',
    rgbaNoSpace: 'rgba(255,255,255,1)',
    rgbaModern: 'rgb(255 255 255 / 1)',
    hsl: 'hsl(0, 0%, 100%)',
    hslNoSpace: 'hsl(0,0%,100%)',
    hslModern: 'hsl(0 0% 100%)',
    hsla: 'hsla(0, 0%, 100%, 1)',
    hslaNoSpace: 'hsla(0,0%,100%,1)',
    hslaModern: 'hsl(0 0% 100% / 1)',
    lab: 'lab(100 0 0)',
    object: { r: 255, g: 255, b: 255 },
  },
  semiWhite: {
    hex: undefined,
    hexAlpha: '#ffffff80',
    hexShort: undefined,
    rgb: undefined,
    rgbNoSpace: undefined,
    rgbModern: undefined,
    rgba: 'rgba(255, 255, 255, 0.5)',
    rgbaNoSpace: 'rgba(255,255,255,0.5)',
    rgbaModern: 'rgb(255 255 255 / 0.5)',
    hsl: undefined,
    hslNoSpace: undefined,
    hslModern: undefined,
    hsla: 'hsla(0, 0%, 100%, 0.5)',
    hslaNoSpace: 'hsla(0,0%,100%,0.5)',
    hslaModern: 'hsl(0 0% 100% / 0.5)',
    lab: 'lab(100 0 0 / 0.5)',
    object: { r: 255, g: 255, b: 255, a: 0.5 },
  },
  black: {
    hex: '#000000',
    hexAlpha: '#000000ff',
    hexShort: '#000',
    rgb: 'rgb(0, 0, 0)',
    rgbNoSpace: 'rgb(0,0,0)',
    rgbModern: 'rgb(0 0 0)',
    rgba: 'rgba(0, 0, 0, 1)',
    rgbaNoSpace: 'rgba(0,0,0,1)',
    rgbaModern: 'rgb(0 0 0 / 1)',
    hsl: 'hsl(0, 0%, 0%)',
    hslNoSpace: 'hsl(0,0%,0%)',
    hslModern: 'hsl(0 0% 0%)',
    hsla: 'hsla(0, 0%, 0%, 1)',
    hslaNoSpace: 'hsla(0,0%,0%,1)',
    hslaModern: 'hsl(0 0% 0% / 1)',
    lab: 'lab(0 0 0)',
    object: { r: 0, g: 0, b: 0 },
  },
  gray: {
    hex: '#808080',
    hexAlpha: '#808080ff',
    rgb: 'rgb(128, 128, 128)',
    rgbNoSpace: 'rgb(128,128,128)',
    rgbModern: 'rgb(128 128 128)',
    rgba: 'rgba(128, 128, 128, 1)',
    rgbaNoSpace: 'rgba(128,128,128,1)',
    rgbaModern: 'rgb(128 128 128 / 1)',
    hsl: 'hsl(0, 0%, 50%)',
    hslNoSpace: 'hsl(0,0%,50%)',
    hslModern: 'hsl(0 0% 50%)',
    hsla: 'hsla(0, 0%, 50%, 1)',
    hslaNoSpace: 'hsla(0,0%,50%,1)',
    hslaModern: 'hsl(0 0% 50% / 1)',
    lab: 'lab(53.585 0 0)',
    object: { r: 128, g: 128, b: 128 },
  },
  red: {
    hex: '#ff0000',
    hexAlpha: '#ff0000ff',
    hexShort: '#f00',
    rgb: 'rgb(255, 0, 0)',
    rgbNoSpace: 'rgb(255,0,0)',
    rgbModern: 'rgb(255 0 0)',
    rgba: 'rgba(255, 0, 0, 1)',
    rgbaNoSpace: 'rgba(255,0,0,1)',
    rgbaModern: 'rgb(255 0 0 / 1)',
    hsl: 'hsl(0, 100%, 50%)',
    hslNoSpace: 'hsl(0,100%,50%)',
    hslModern: 'hsl(0 100% 50%)',
    hsla: 'hsla(0, 100%, 50%, 1)',
    hslaNoSpace: 'hsla(0,100%,50%,1)',
    hslaModern: 'hsl(0 100% 50% / 1)',
    lab: 'lab(53.241 80.092 67.203)',
    object: { r: 255, g: 0, b: 0 },
  },
  lightRed: {
    hex: '#ff8080',
    hexAlpha: '#ff8080ff',
    rgb: 'rgb(255, 128, 128)',
    rgbNoSpace: 'rgb(255,128,128)',
    rgbModern: 'rgb(255 128 128)',
    rgba: 'rgba(255, 128, 128, 1)',
    rgbaNoSpace: 'rgba(255,128,128,1)',
    rgbaModern: 'rgb(255 128 128 / 1)',
    hsl: 'hsl(0, 100%, 75%)',
    hslNoSpace: 'hsl(0,100%,75%)',
    hslModern: 'hsl(0 100% 75%)',
    hsla: 'hsla(0, 100%, 75%, 1)',
    hslaNoSpace: 'hsla(0,100%,75%,1)',
    hslaModern: 'hsl(0 100% 75% / 1)',
    lab: 'lab(71.232 45.575 22.875)',
    object: { r: 255, g: 128, b: 128 },
  },
  darkRed: {
    hex: '#800000',
    hexAlpha: '#800000ff',
    hexShort: '#800',
    rgb: 'rgb(128, 0, 0)',
    rgbNoSpace: 'rgb(128,0,0)',
    rgbModern: 'rgb(128 0 0)',
    rgba: 'rgba(128, 0, 0, 1)',
    rgbaNoSpace: 'rgba(128,0,0,1)',
    rgbaModern: 'rgb(128 0 0 / 1)',
    hsl: 'hsl(0, 100%, 25%)',
    hslNoSpace: 'hsl(0,100%,25%)',
    hslModern: 'hsl(0 100% 25%)',
    hsla: 'hsla(0, 100%, 25%, 1)',
    hslaNoSpace: 'hsla(0,100%,25%,1)',
    hslaModern: 'hsl(0 100% 25% / 1)',
    lab: 'lab(25.527 47.463 38.972)',
    object: { r: 128, g: 0, b: 0 },
  },
  semiRed: {
    hex: undefined,
    hexAlpha: '#ff000080',
    hexShort: undefined,
    rgb: undefined,
    rgbNoSpace: undefined,
    rgbModern: undefined,
    rgba: 'rgba(255, 0, 0, 0.5)',
    rgbaNoSpace: 'rgba(255,0,0,0.5)',
    rgbaModern: 'rgb(255 0 0 / 0.5)',
    hsl: undefined,
    hslNoSpace: undefined,
    hslModern: undefined,
    hsla: 'hsla(0, 100%, 50%, 0.5)',
    hslaNoSpace: 'hsla(0,100%,50%,0.5)',
    hslaModern: 'hsl(0 100% 50% / 0.5)',
    lab: 'lab(53.241 80.092 67.203 / 0.5)',
    object: { r: 255, g: 0, b: 0, a: 0.5 },
  },
  orange: {
    hex: '#ff8000',
    hexAlpha: '#ff8000ff',
    hexShort: undefined,
    rgb: 'rgb(255, 128, 0)',
    rgbNoSpace: 'rgb(255,128,0)',
    rgbModern: 'rgb(255 128 0)',
    rgba: 'rgba(255, 128, 0, 1)',
    rgbaNoSpace: 'rgba(255,128,0,1)',
    rgbaModern: 'rgb(255 128 0 / 1)',
    hsl: 'hsl(30, 100%, 50%)',
    hslNoSpace: 'hsl(30,100%,50%)',
    hslModern: 'hsl(30 100% 50%)',
    hsla: 'hsla(30, 100%, 50%, 1)',
    hslaNoSpace: 'hsla(30,100%,50%,1)',
    hslaModern: 'hsl(30 100% 50% / 1)',
    lab: 'lab(67.055 42.826 74.018)',
    object: { r: 255, g: 128, b: 0 },
  },
  yellow: {
    hex: '#ffff00',
    hexAlpha: '#ffff00ff',
    hexShort: '#ff0',
    rgb: 'rgb(255, 255, 0)',
    rgbNoSpace: 'rgb(255,255,0)',
    rgbModern: 'rgb(255 255 0)',
    rgba: 'rgba(255, 255, 0, 1)',
    rgbaNoSpace: 'rgba(255,255,0,1)',
    rgbaModern: 'rgb(255 255 0 / 1)',
    hsl: 'hsl(60, 100%, 50%)',
    hslNoSpace: 'hsl(60,100%,50%)',
    hslModern: 'hsl(60 100% 50%)',
    hsla: 'hsla(60, 100%, 50%)',
    hslaNoSpace: 'hsla(60,100%,50%)',
    hslaModern: 'hsl(60 100% 50% / 1)',
    lab: 'lab(97.139 -21.554 94.478)',
    object: { r: 255, g: 255, b: 0 },
  },
  lime: {
    hex: '#80ff00',
    hexAlpha: '#80ff00ff',
    hexShort: undefined,
    rgb: 'rgb(128, 255, 0)',
    rgbNoSpace: 'rgb(128,255,0)',
    rgbModern: 'rgb(128 255 0)',
    rgba: 'rgba(128, 255, 0, 1)',
    rgbaNoSpace: 'rgba(128,255,0,1)',
    rgbaModern: 'rgb(128 255 0 / 1)',
    hsl: 'hsl(90, 100%, 50%)',
    hslNoSpace: 'hsl(90,100%,50%)',
    hslModern: 'hsl(90 100% 50%)',
    hsla: 'hsla(90, 100%, 50%)',
    hslaNoSpace: 'hsla(90,100%,50%)',
    hslaModern: 'hsl(90 100% 50% / 1)',
    lab: 'lab(89.909 -67.786 85.823)',
    object: { r: 128, g: 255, b: 0 },
  },
  green: {
    hex: '#00ff00',
    hexAlpha: '#00ff00ff',
    hexShort: '#0f0',
    rgb: 'rgb(0, 255, 0)',
    rgbNoSpace: 'rgb(0,255,0)',
    rgbModern: 'rgb(0 255 0)',
    rgba: 'rgba(0, 255, 0, 1)',
    rgbaNoSpace: 'rgba(0,255,0,1)',
    rgbaModern: 'rgb(0 255 0 / 1)',
    hsl: 'hsl(120, 100%, 50%)',
    hslNoSpace: 'hsl(120,100%,50%)',
    hslModern: 'hsl(120 100% 50%)',
    hsla: 'hsla(120, 100%, 50%)',
    hslaNoSpace: 'hsla(120,100%,50%)',
    hslaModern: 'hsl(120 100% 50% / 1)',
    lab: 'lab(87.735 -86.183 83.179)',
    object: { r: 0, g: 255, b: 0 },
  },
  teal: {
    hex: '#00ff80',
    hexAlpha: '#00ff80ff',
    hexShort: undefined,
    rgb: 'rgb(0, 255, 128)',
    rgbNoSpace: 'rgb(0,255,128)',
    rgbModern: 'rgb(0 255 128)',
    rgba: 'rgba(0, 255, 128, 1)',
    rgbaNoSpace: 'rgba(0,255,128,1)',
    rgbaModern: 'rgb(0 255 128 / 1)',
    hsl: 'hsl(150, 100%, 50%)',
    hslNoSpace: 'hsl(150,100%,50%)',
    hslModern: 'hsl(150 100% 50%)',
    hsla: 'hsla(150, 100%, 50%)',
    hslaNoSpace: 'hsla(150,100%,50%)',
    hslaModern: 'hsl(150 100% 50% / 1)',
    lab: 'lab(88.483 -76.75 46.574)',
    object: { r: 0, g: 255, b: 128 },
  },
  cyan: {
    hex: '#00ffff',
    hexAlpha: '#00ffffff',
    hexShort: '#0ff',
    rgb: 'rgb(0, 255, 255)',
    rgbNoSpace: 'rgb(0,255,255)',
    rgbModern: 'rgb(0 255 255)',
    rgba: 'rgba(0, 255, 255, 1)',
    rgbaNoSpace: 'rgba(0,255,255,1)',
    rgbaModern: 'rgb(0 255 255 / 1)',
    hsl: 'hsl(180, 100%, 50%)',
    hslNoSpace: 'hsl(180,100%,50%)',
    hslModern: 'hsl(180 100% 50%)',
    hsla: 'hsla(180, 100%, 50%)',
    hslaNoSpace: 'hsla(180,100%,50%)',
    hslaModern: 'hsl(180 100% 50% / 1)',
    lab: 'lab(91.113 -48.088 -14.131)',
    object: { r: 0, g: 255, b: 255 },
  },
  lightblue: {
    hex: '#0080ff',
    hexAlpha: '#0080ffff',
    hexShort: undefined,
    rgb: 'rgb(0, 128, 255)',
    rgbNoSpace: 'rgb(0,128,255)',
    rgbModern: 'rgb(0 128 255)',
    rgba: 'rgba(0, 128, 255, 1)',
    rgbaNoSpace: 'rgba(0,128,255,1)',
    rgbaModern: 'rgb(0 128 255 / 1)',
    hsl: 'hsl(210, 100%, 50%)',
    hslNoSpace: 'hsl(210,100%,50%)',
    hslModern: 'hsl(210 100% 50%)',
    hsla: 'hsla(210, 100%, 50%)',
    hslaNoSpace: 'hsla(210,100%,50%)',
    hslaModern: 'hsl(210 100% 50% / 1)',
    lab: 'lab(54.715 18.777 -70.918)',
    object: { r: 0, g: 128, b: 255 },
  },
  blue: {
    hex: '#0000ff',
    hexAlpha: '#0000ffff',
    hexShort: '#00f',
    rgb: 'rgb(0, 0, 255)',
    rgbNoSpace: 'rgb(0,0,255)',
    rgbModern: 'rgb(0 0 255)',
    rgba: 'rgba(0, 0, 255, 1)',
    rgbaNoSpace: 'rgba(0,0,255,1)',
    rgbaModern: 'rgb(0 0 255 / 1)',
    hsl: 'hsl(240, 100%, 50%)',
    hslNoSpace: 'hsl(240,100%,50%)',
    hslModern: 'hsl(240 100% 50%)',
    hsla: 'hsla(240, 100%, 50%)',
    hslaNoSpace: 'hsla(240,100%,50%)',
    hslaModern: 'hsl(240 100% 50% / 1)',
    lab: 'lab(32.297 79.188 -107.86)',
    object: { r: 0, g: 0, b: 255 },
  },
  purple: {
    hex: '#8000ff',
    hexAlpha: '#8000ffff',
    hexShort: undefined,
    rgb: 'rgb(128, 0, 255)',
    rgbNoSpace: 'rgb(128,0,255)',
    rgbModern: 'rgb(128 0 255)',
    rgba: 'rgba(128, 0, 255, 1)',
    rgbaNoSpace: 'rgba(128,0,255,1)',
    rgbaModern: 'rgb(128 0 255 / 1)',
    hsl: 'hsl(270, 100%, 50%)',
    hslNoSpace: 'hsl(270,100%,50%)',
    hslModern: 'hsl(270 100% 50%)',
    hsla: 'hsla(270, 100%, 50%)',
    hslaNoSpace: 'hsla(270,100%,50%)',
    hslaModern: 'hsl(270 100% 50% / 1)',
    lab: 'lab(40.91 83.168 -93.29)',
    object: { r: 128, g: 0, b: 255 },
  },
  pink: {
    hex: '#ff00ff',
    hexAlpha: '#ff00ffff',
    hexShort: '#f0f',
    rgb: 'rgb(255, 0, 255)',
    rgbNoSpace: 'rgb(255,0,255)',
    rgbModern: 'rgb(255 0 255)',
    rgba: 'rgba(255, 0, 255, 1)',
    rgbaNoSpace: 'rgba(255,0,255,1)',
    rgbaModern: 'rgb(255 0 255 / 1)',
    hsl: 'hsl(300, 100%, 50%)',
    hslNoSpace: 'hsl(300,100%,50%)',
    hslModern: 'hsl(300 100% 50%)',
    hsla: 'hsla(300, 100%, 50%)',
    hslaNoSpace: 'hsla(300,100%,50%)',
    hslaModern: 'hsl(300 100% 50% / 1)',
    lab: 'lab(60.324 98.234 -60.825)',
    object: { r: 255, g: 0, b: 255 },
  },
  magenta: {
    hex: '#ff0080',
    hexAlpha: '#ff0080ff',
    hexShort: undefined,
    rgb: 'rgb(255, 0, 128)',
    rgbNoSpace: 'rgb(255,0,128)',
    rgbModern: 'rgb(255 0 128)',
    rgba: 'rgba(255, 0, 128, 1)',
    rgbaNoSpace: 'rgba(255,0,128,1)',
    rgbaModern: 'rgb(255 0 128 / 1)',
    hsl: 'hsl(330, 100%, 50%)',
    hslNoSpace: 'hsl(330,100%,50%)',
    hslModern: 'hsl(330 100% 50%)',
    hsla: 'hsla(330, 100%, 50%)',
    hslaNoSpace: 'hsla(330,100%,50%)',
    hslaModern: 'hsl(330 100% 50% / 1)',
    lab: 'lab(54.892 84.535 4.079)',
    object: { r: 255, g: 0, b: 128 },
  },
} satisfies Record<
  string,
  {
    hex: HashHexString | undefined;
    hexAlpha: HashHexString;
    hexShort?: HashHexString;
    rgb: RgbString | undefined;
    rgbNoSpace: RgbString | undefined;
    rgbModern: RgbString | undefined;
    rgba: RgbaString;
    rgbaNoSpace: RgbaString;
    rgbaModern: RgbString;
    hsl: HslString | undefined;
    hslNoSpace: HslString | undefined;
    hslModern: HslString | undefined;
    hsla: HslaString;
    hslaNoSpace: HslaString;
    hslaModern: HslString;
    lab: string;
    object: RgbObject;
  }
>;
